name: BSN Backend API Pipeline

on:
  push:
    branches:
      - main
    paths:
      - book-network/**
      - Dockerfile
      - 'docker-compose.yml'
      - .github/workflows/*-backend.yml
jobs:
  compile:
    runs-on: self-hosted
    name: Compile project
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup jdk
        uses: actions/setup-jdk@v4
        with:
          java-version: 17
          distribution: "corretto"
      - name: Compile code
        run: |
          cd book-network
          ./mvnw clean compile
  
  unit-tests:
    runs-on: self-hosted
    name: Unit tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup jdk
        uses: actions/setup-jdk@v4
        with:
          java-version: 17
          distribution: "corretto"
      - name: Running unit tests
        run: |
          cd book-network
          ./mvnw clean test
  build:
    runs-on: self-hosted
    name: Build backend
    needs: [ compile, unit-tests ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup jdk
        uses: actions/setup-jdk@v4
        with:
          java-version: 17
          distribution: "corretto"
      - name: Build project
        run: |
          cd book-network
          ./mvnw clean package
  build-image:
    name: Build docker image
    runs-on: self-hosted
    needs: [ build ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup jdk
        uses: actions/setup-jdk@v4
        with:
          java-version: 17
          distribution: "corretto"
      - name: Build project
        run: |
          cd book-network
          ./mvnw clean package
      - name: Extract project version
        id: extract_version   # to use later by id
        # getting project version
        run: |
          cd book-network
          echo "VERSION=$(./mvnw help:evaluate -Dexpression='project.version' -q -DforceStdout)" >> $GITHUB_OUTPUT
      - name: Login to docker hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build & Push to Dockerhub
        uses: docker/build-push-action@v5
        with:
          context: book-network
          file: Dockerfile
          push: true
          platform: linux/amd64
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/bsn-api:${{ steps.extract_version.outputs.VERSION }},${{ secrets.DOCKERHUB_USERNAME }}/bsn-api:latest
          build-args: |
            PROFILE=dev
            APP_VERSION=${{ steps.extract_version.outputs.VERSION }}
  deploy:
    name: Deploy backend
    runs-on: self-s
    needs: [build-image]
    steps:
      - name: Set key permission
        run:  chmod 400 bsn.pem
      - name: Create deployment folder
        run:  ssh -i "bsn.pem" ${{ secrets.VPS_USERNAME}}@${{ secrets.VPS_IP}} "mkdir -p ci-cd"    # connect to instance and making folder
      - name: Copy docker-compose file
        run:  scp docker-compose.yml ${{ secrets.VPS_USERNAME}}@${{ secrets.VPS_IP}}:ci-cd/docker-compose.yml
      - name: Set ENV variables and deploy
        run: |
          ssh -i "bsn.pem" ${{ secrets.VPS_USERNAME}}@${{ secrets.VPS_IP}} <<EOF
          export EMAIL_HOSTNAME=${{ secrets.EMAIL_HOSTNAME}}
          export EMAIL_USERNAME=${{ secrets.EMAIL_USERNAME}}
          export EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD}}
          cd ci-cd
          docker-compose -f docker-compose.yml pull -q
          docker-compose -f docker-compose.yml up -d
          EOF

